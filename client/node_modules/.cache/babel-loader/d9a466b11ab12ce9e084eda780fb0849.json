{"ast":null,"code":"var _jsxFileName = \"/Users/mehulgore/projects/dinin/client/src/eater/CustomerMenu.js\";\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport { useHistory, generatePath } from \"react-router-dom\";\nimport \"./App.css\";\nimport * as firebase from \"firebase\";\nimport MenuItem from \"./MenuItem\";\nimport LoginForm from \"./LoginForm\";\nimport WaiterRequest from \"./WaiterRequest\";\nimport { useAlert } from \"react-alert\";\nimport TableDone from \"./TableDone\";\nimport SignOutButton from \"./SignOutButton\";\nimport TopBarMenu from \"./TopBarMenu\";\n\nconst CustomerMenu = props => {\n  const alert = useAlert();\n  var database = firebase.database();\n  const [totalStages, setTotalStages] = useState(4);\n  const [signedIn, setSignedIn] = useState(true);\n  const [currentBatch, setCurrentBatch] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const [userName, setUserName] = useState(\"\");\n  const [seatTaken, setSeatTaken] = useState(false);\n  const [stageNames, setStageNames] = useState({});\n  const [tableDone, setTableDone] = useState(false);\n  const [cartSize, setCartSize] = useState(0);\n  const [tableUsers, setTableUsers] = useState({});\n  const [menu, setMenu] = useState(null);\n  const [restaurant, setRestaurant] = useState(\"\");\n  const [table, setTable] = useState(\"\");\n  const [seat, setSeat] = useState(0);\n  const [stageNum, setStageNum] = useState(0);\n  const [stageDesc, setStageDesc] = useState(\"\");\n  const [stageName, setStageName] = useState(\"\");\n  const [loaded, setLoaded] = useState(false);\n  const {\n    match\n  } = props;\n  const params = match.params;\n  const thisRest = params.restaurant;\n  const history = useHistory();\n  useEffect(() => {\n    if (userId != null) {\n      initTableDone();\n      initTableUsers();\n    }\n  }, [userId]);\n  useEffect(() => {\n    if (!tableDone && userId != null) {\n      addUserToSeat();\n    }\n  }, [tableDone, userId]);\n  useEffect(() => {\n    setStageNum(params.stage);\n  }, [props.location]);\n  useEffect(() => {\n    if (menu != null && menu[stageNum] != null) {\n      setStageName(menu[stageNum][\"stage_name\"]);\n      setStageDesc(menu[stageNum][\"stage_desc\"]);\n    }\n  }, [menu, stageNum]);\n  useEffect(() => {\n    initMenu();\n    initSignedInState();\n    initBatch();\n    setRestaurant(params.restaurant);\n    setTable(params.table);\n    setSeat(params.seat);\n  }, []);\n  useEffect(() => {\n    if (currentBatch != null) {\n      initCartSize();\n    }\n  }, [currentBatch]);\n\n  const initTableUsers = () => {\n    database.ref(thisRest).child(\"tables\").child(params.table).child(\"users\").on(\"value\", function (snapshot) {\n      var users = snapshot.val();\n      var tempSplitSeats = {};\n\n      for (var id in users) {\n        var name = users[id][\"name\"];\n        var seat = users[id][\"seat\"];\n        tempSplitSeats[seat] = {};\n        tempSplitSeats[seat][\"taken\"] = false;\n        tempSplitSeats[seat][\"name\"] = name;\n        tempSplitSeats[seat][\"user_id\"] = id;\n      }\n\n      console.log(tempSplitSeats);\n      setTableUsers(tempSplitSeats);\n    });\n  };\n\n  const initCartSize = () => {\n    database.ref(thisRest).child(\"tables\").child(params.table).child(\"batches\").child(currentBatch).on(\"value\", function (snapshot) {\n      const val = snapshot.val();\n\n      if (val && val[\"seat_data\"] && val[\"seat_data\"][params.seat] && val[\"seat_data\"][params.seat][\"items\"]) {\n        var items = val[\"seat_data\"][params.seat][\"items\"];\n        var size = 0;\n\n        for (var key in items) {\n          size += Number(items[key][\"quantity\"]);\n        }\n\n        setCartSize(Math.ceil(size));\n      }\n    });\n  };\n\n  const initTableDone = () => {\n    database.ref(thisRest).child(\"tables\").child(params.table).on(\"value\", function (snapshot) {\n      if (snapshot.hasChild(\"past_users\")) {\n        database.ref(thisRest).child(\"tables\").child(params.table).child(\"past_users\").on(\"value\", function (snapshot) {\n          setTableDone(snapshot.hasChild(userId));\n        });\n      } else {\n        // previously unseen table, set to false\n        setTableDone(false);\n      }\n    });\n  };\n\n  const sendToTable = (item_id, title, notes, category, quantity, price, splitSeats) => {\n    const id = item_id;\n\n    if (splitSeats != null) {\n      console.log(splitSeats); // handle splitting items\n\n      var splitCount = 0;\n\n      for (var seat in splitSeats) {\n        // find number of splitting people\n        if (splitSeats[seat][\"taken\"]) {\n          splitCount++;\n        }\n      }\n\n      var fraction = Number((quantity / splitCount).toFixed(2));\n      var item = {\n        title: title,\n        notes: notes,\n        category: category,\n        quantity: fraction,\n        status: \"Order Sent\",\n        ordered: false,\n        price: price\n      };\n      item.split = splitSeats; // push current user first and get key\n\n      var key = database.ref(thisRest).child(\"tables\").child(table).child(\"batches\").child(currentBatch).child(\"seat_data\").child(params.seat).child(\"items\").push(item).key;\n\n      for (var currSeat in splitSeats) {\n        database.ref(thisRest).child(\"tables\").child(table).child(\"batches\").child(currentBatch).child(\"seat_data\").child(currSeat).child(\"items\").child(key).update(item);\n      }\n    } else {\n      var item = {\n        title: title,\n        notes: notes,\n        category: category,\n        quantity: quantity,\n        status: \"Order Sent\",\n        ordered: false,\n        price: price\n      };\n      database.ref(thisRest).child(\"tables\").child(table).child(\"batches\").child(currentBatch).child(\"seat_data\").child(params.seat).child(\"items\").push(item);\n    }\n  };\n\n  const routeToStage = stage => {\n    const path = generatePath(match.path, {\n      restaurant: restaurant,\n      table: table,\n      seat: seat,\n      stage: stage\n    });\n    history.replace(path);\n  };\n\n  const addUserToSeat = () => {\n    database.ref(\"users\").child(userId).child(\"name\").once(\"value\").then(function (snapshot) {\n      return snapshot.val();\n    }).then(name => {\n      setUserName(name);\n      database.ref(thisRest).child(\"tables\").child(params.table).child(\"users\").child(userId).update({\n        name: name,\n        seat: params.seat,\n        water_ordered: false\n      });\n    });\n  };\n\n  const initSignedInState = () => {\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        console.log(\"user signed in \");\n        setSignedIn(true);\n        setUserId(user.uid);\n      } else {\n        console.log(\"user NOT signed in \");\n        setSignedIn(false);\n        database.ref(thisRest).child(\"tables\").child(params.table).child(\"users\").once(\"value\").then(function (snapshot) {\n          var userMap = snapshot.val();\n\n          for (var user_id in userMap) {\n            if (params.seat == userMap[user_id][\"seat\"]) {\n              setSeatTaken(true);\n              window.alert(\"Someone is sitting here! Scan another seat\");\n            }\n          }\n        });\n      }\n    });\n  };\n\n  const initMenu = () => {\n    var finalMenu = {};\n    database.ref(thisRest).once(\"value\").then(function (snapshot) {\n      return snapshot.exists();\n    }).then(valid => {\n      if (valid) {\n        database.ref(thisRest).child(\"menu\").once(\"value\").then(function (snapshot) {\n          var tempMenu = snapshot.val();\n\n          for (var stage in tempMenu) {\n            // get stage names for menu\n            var temp = stageNames;\n            temp[stage] = tempMenu[stage][\"stage_name\"];\n            setStageNames(temp);\n          }\n\n          setMenu(tempMenu);\n          setTotalStages(Object.keys(tempMenu).length);\n          setLoaded(true);\n        });\n      }\n    }).catch(error => console.log(error));\n  };\n\n  const initBatch = () => {\n    database.ref(thisRest).child(\"tables\").child(params.table).child(\"batches\").on(\"value\", function (snapshot) {\n      if (!snapshot.exists()) {\n        // create first batch key\n        var batch_key = database.ref(thisRest).child(\"tables\").child(params.table).child(\"batches\").push(\"\").key;\n        setCurrentBatch(batch_key);\n      } else {\n        // get last batch key\n        database.ref(thisRest).child(\"tables\").child(params.table).child(\"batches\").limitToLast(1).on(\"value\", function (snapshot) {\n          snapshot.forEach(function (child) {\n            setCurrentBatch(child.key);\n          });\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 5\n    }\n  }, loaded ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mt-3 mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 9\n    }\n  }, !signedIn ? /*#__PURE__*/React.createElement(LoginForm, {\n    seatTaken: seatTaken,\n    match: match,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 13\n    }\n  }, tableDone ? /*#__PURE__*/React.createElement(TableDone, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fixed-top white-bg mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(WaiterRequest, {\n    match: match,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TopBarMenu, {\n    stageNum: stageNum,\n    stageNames: stageNames,\n    routeToStage: routeToStage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingTop: \"130px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 21\n    }\n  }, \" \", stageName, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 21\n    }\n  }, \" \", stageDesc, \" \"), Object.keys(menu[stageNum][\"items\"]).map(item_key => {\n    var item = menu[stageNum][\"items\"][item_key];\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      key: item_key,\n      className: \"pl-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      key: item.id,\n      id: item.id,\n      title: item.title,\n      description: item.description,\n      price: item.price,\n      sendToTable: sendToTable,\n      category: item.category,\n      tableUsers: tableUsers,\n      match: match,\n      userId: userId //deleteMenuItem={deleteMenuItem}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 27\n      }\n    }));\n  }), /*#__PURE__*/React.createElement(SignOutButton, {\n    userId: userId,\n    restaurant: thisRest,\n    table: params.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fixed-bottom mb-4 d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/\" + thisRest + \"/menu/\" + table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-dark btn-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 23\n    }\n  }, \"View Cart\", \" \", cartSize != 0 ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"badge badge-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 27\n    }\n  }, \" \", cartSize, \" \") : null)))))) : null);\n};\n\nexport default CustomerMenu;","map":{"version":3,"sources":["/Users/mehulgore/projects/dinin/client/src/eater/CustomerMenu.js"],"names":["React","useState","useEffect","Fragment","useHistory","generatePath","firebase","MenuItem","LoginForm","WaiterRequest","useAlert","TableDone","SignOutButton","TopBarMenu","CustomerMenu","props","alert","database","totalStages","setTotalStages","signedIn","setSignedIn","currentBatch","setCurrentBatch","userId","setUserId","userName","setUserName","seatTaken","setSeatTaken","stageNames","setStageNames","tableDone","setTableDone","cartSize","setCartSize","tableUsers","setTableUsers","menu","setMenu","restaurant","setRestaurant","table","setTable","seat","setSeat","stageNum","setStageNum","stageDesc","setStageDesc","stageName","setStageName","loaded","setLoaded","match","params","thisRest","history","initTableDone","initTableUsers","addUserToSeat","stage","location","initMenu","initSignedInState","initBatch","initCartSize","ref","child","on","snapshot","users","val","tempSplitSeats","id","name","console","log","items","size","key","Number","Math","ceil","hasChild","sendToTable","item_id","title","notes","category","quantity","price","splitSeats","splitCount","fraction","toFixed","item","status","ordered","split","push","currSeat","update","routeToStage","path","replace","once","then","water_ordered","auth","onAuthStateChanged","user","uid","userMap","user_id","window","finalMenu","exists","valid","tempMenu","temp","Object","keys","length","catch","error","batch_key","limitToLast","forEach","paddingTop","map","item_key","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\nimport { useHistory, generatePath } from \"react-router-dom\";\nimport \"./App.css\";\nimport * as firebase from \"firebase\";\nimport MenuItem from \"./MenuItem\";\nimport LoginForm from \"./LoginForm\";\nimport WaiterRequest from \"./WaiterRequest\";\nimport { useAlert } from \"react-alert\";\nimport TableDone from \"./TableDone\";\nimport SignOutButton from \"./SignOutButton\";\nimport TopBarMenu from \"./TopBarMenu\";\n\nconst CustomerMenu = props => {\n  const alert = useAlert();\n  var database = firebase.database();\n  const [totalStages, setTotalStages] = useState(4);\n  const [signedIn, setSignedIn] = useState(true);\n  const [currentBatch, setCurrentBatch] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const [userName, setUserName] = useState(\"\");\n  const [seatTaken, setSeatTaken] = useState(false);\n  const [stageNames, setStageNames] = useState({});\n  const [tableDone, setTableDone] = useState(false);\n  const [cartSize, setCartSize] = useState(0);\n  const [tableUsers, setTableUsers] = useState({});\n\n  const [menu, setMenu] = useState(null);\n  const [restaurant, setRestaurant] = useState(\"\");\n  const [table, setTable] = useState(\"\");\n  const [seat, setSeat] = useState(0);\n\n  const [stageNum, setStageNum] = useState(0);\n  const [stageDesc, setStageDesc] = useState(\"\");\n  const [stageName, setStageName] = useState(\"\");\n\n  const [loaded, setLoaded] = useState(false);\n\n  const { match } = props;\n  const params = match.params;\n  const thisRest = params.restaurant;\n\n  const history = useHistory();\n\n  useEffect(() => {\n    if (userId != null) {\n      initTableDone();\n      initTableUsers();\n    }\n  }, [userId]);\n\n  useEffect(() => {\n    if (!tableDone && userId != null) {\n      addUserToSeat();\n    }\n  }, [tableDone, userId]);\n\n  useEffect(() => {\n    setStageNum(params.stage);\n  }, [props.location]);\n\n  useEffect(() => {\n    if (menu != null && menu[stageNum] != null) {\n      setStageName(menu[stageNum][\"stage_name\"]);\n      setStageDesc(menu[stageNum][\"stage_desc\"]);\n    }\n  }, [menu, stageNum]);\n\n  useEffect(() => {\n    initMenu();\n    initSignedInState();\n    initBatch();\n    setRestaurant(params.restaurant);\n    setTable(params.table);\n    setSeat(params.seat);\n  }, []);\n\n  useEffect(() => {\n    if (currentBatch != null) {\n      initCartSize();\n    }\n  }, [currentBatch]);\n\n  const initTableUsers = () => {\n    database\n      .ref(thisRest)\n      .child(\"tables\")\n      .child(params.table)\n      .child(\"users\")\n      .on(\"value\", function(snapshot) {\n        var users = snapshot.val();\n        var tempSplitSeats = {};\n        for (var id in users) {\n          var name = users[id][\"name\"];\n          var seat = users[id][\"seat\"];\n          tempSplitSeats[seat] = {};\n          tempSplitSeats[seat][\"taken\"] = false;\n          tempSplitSeats[seat][\"name\"] = name;\n          tempSplitSeats[seat][\"user_id\"] = id;\n        }\n        console.log(tempSplitSeats);\n        setTableUsers(tempSplitSeats);\n      });\n  };\n\n  const initCartSize = () => {\n    database\n      .ref(thisRest)\n      .child(\"tables\")\n      .child(params.table)\n      .child(\"batches\")\n      .child(currentBatch)\n      .on(\"value\", function(snapshot) {\n        const val = snapshot.val();\n        if (\n          val &&\n          val[\"seat_data\"] &&\n          val[\"seat_data\"][params.seat] &&\n          val[\"seat_data\"][params.seat][\"items\"]\n        ) {\n          var items = val[\"seat_data\"][params.seat][\"items\"];\n          var size = 0;\n          for (var key in items) {\n            size += Number(items[key][\"quantity\"]);\n          }\n          setCartSize(Math.ceil(size));\n        }\n      });\n  };\n\n  const initTableDone = () => {\n    database\n      .ref(thisRest)\n      .child(\"tables\")\n      .child(params.table)\n      .on(\"value\", function(snapshot) {\n        if (snapshot.hasChild(\"past_users\")) {\n          database\n            .ref(thisRest)\n            .child(\"tables\")\n            .child(params.table)\n            .child(\"past_users\")\n            .on(\"value\", function(snapshot) {\n              setTableDone(snapshot.hasChild(userId));\n            });\n        } else {\n          // previously unseen table, set to false\n          setTableDone(false);\n        }\n      });\n  };\n\n  const sendToTable = (\n    item_id,\n    title,\n    notes,\n    category,\n    quantity,\n    price,\n    splitSeats\n  ) => {\n    const id = item_id;\n    if (splitSeats != null) {\n      console.log(splitSeats);\n      // handle splitting items\n      var splitCount = 0;\n      for (var seat in splitSeats) {\n        // find number of splitting people\n        if (splitSeats[seat][\"taken\"]) {\n          splitCount++;\n        }\n      }\n      var fraction = Number((quantity / splitCount).toFixed(2));\n      var item = {\n        title: title,\n        notes: notes,\n        category: category,\n        quantity: fraction,\n        status: \"Order Sent\",\n        ordered: false,\n        price: price\n      };\n      item.split = splitSeats;\n      // push current user first and get key\n      var key = database\n        .ref(thisRest)\n        .child(\"tables\")\n        .child(table)\n        .child(\"batches\")\n        .child(currentBatch)\n        .child(\"seat_data\")\n        .child(params.seat)\n        .child(\"items\")\n        .push(item).key;\n      for (var currSeat in splitSeats) {\n        database\n          .ref(thisRest)\n          .child(\"tables\")\n          .child(table)\n          .child(\"batches\")\n          .child(currentBatch)\n          .child(\"seat_data\")\n          .child(currSeat)\n          .child(\"items\")\n          .child(key)\n          .update(item);\n      }\n    } else {\n      var item = {\n        title: title,\n        notes: notes,\n        category: category,\n        quantity: quantity,\n        status: \"Order Sent\",\n        ordered: false,\n        price: price\n      };\n      database\n        .ref(thisRest)\n        .child(\"tables\")\n        .child(table)\n        .child(\"batches\")\n        .child(currentBatch)\n        .child(\"seat_data\")\n        .child(params.seat)\n        .child(\"items\")\n        .push(item);\n    }\n  };\n\n  const routeToStage = stage => {\n    const path = generatePath(match.path, {\n      restaurant: restaurant,\n      table: table,\n      seat: seat,\n      stage: stage\n    });\n    history.replace(path);\n  };\n\n  const addUserToSeat = () => {\n    database\n      .ref(\"users\")\n      .child(userId)\n      .child(\"name\")\n      .once(\"value\")\n      .then(function(snapshot) {\n        return snapshot.val();\n      })\n      .then(name => {\n        setUserName(name);\n        database\n          .ref(thisRest)\n          .child(\"tables\")\n          .child(params.table)\n          .child(\"users\")\n          .child(userId)\n          .update({\n            name: name,\n            seat: params.seat,\n            water_ordered: false\n          });\n      });\n  };\n\n  const initSignedInState = () => {\n    firebase.auth().onAuthStateChanged(function(user) {\n      if (user) {\n        console.log(\"user signed in \");\n        setSignedIn(true);\n        setUserId(user.uid);\n      } else {\n        console.log(\"user NOT signed in \");\n        setSignedIn(false);\n        database\n          .ref(thisRest)\n          .child(\"tables\")\n          .child(params.table)\n          .child(\"users\")\n          .once(\"value\")\n          .then(function(snapshot) {\n            var userMap = snapshot.val();\n            for (var user_id in userMap) {\n              if (params.seat == userMap[user_id][\"seat\"]) {\n                setSeatTaken(true);\n                window.alert(\"Someone is sitting here! Scan another seat\");\n              }\n            }\n          });\n      }\n    });\n  };\n\n  const initMenu = () => {\n    var finalMenu = {};\n    database\n      .ref(thisRest)\n      .once(\"value\")\n      .then(function(snapshot) {\n        return snapshot.exists();\n      })\n      .then(valid => {\n        if (valid) {\n          database\n            .ref(thisRest)\n            .child(\"menu\")\n            .once(\"value\")\n            .then(function(snapshot) {\n              var tempMenu = snapshot.val();\n              for (var stage in tempMenu) {\n                // get stage names for menu\n                var temp = stageNames;\n                temp[stage] = tempMenu[stage][\"stage_name\"];\n                setStageNames(temp);\n              }\n              setMenu(tempMenu);\n              setTotalStages(Object.keys(tempMenu).length);\n              setLoaded(true);\n            });\n        }\n      })\n      .catch(error => console.log(error));\n  };\n\n  const initBatch = () => {\n    database\n      .ref(thisRest)\n      .child(\"tables\")\n      .child(params.table)\n      .child(\"batches\")\n      .on(\"value\", function(snapshot) {\n        if (!snapshot.exists()) {\n          // create first batch key\n          var batch_key = database\n            .ref(thisRest)\n            .child(\"tables\")\n            .child(params.table)\n            .child(\"batches\")\n            .push(\"\").key;\n          setCurrentBatch(batch_key);\n        } else {\n          // get last batch key\n          database\n            .ref(thisRest)\n            .child(\"tables\")\n            .child(params.table)\n            .child(\"batches\")\n            .limitToLast(1)\n            .on(\"value\", function(snapshot) {\n              snapshot.forEach(function(child) {\n                setCurrentBatch(child.key);\n              });\n            });\n        }\n      });\n  };\n\n  return (\n    <div>\n      {loaded ? (\n        <div className=\"container mt-3 mb-5\">\n          {!signedIn ? (\n            <LoginForm seatTaken={seatTaken} match={match} />\n          ) : (\n            <Fragment>\n              {tableDone ? (\n                <TableDone />\n              ) : (\n                <Fragment>\n                  <div className=\"fixed-top white-bg mb-1\">\n                    <WaiterRequest match={match} />\n                    <TopBarMenu\n                      stageNum={stageNum}\n                      stageNames={stageNames}\n                      routeToStage={routeToStage}\n                    />\n                  </div>\n\n                  <div style={{ paddingTop: \"130px\" }}>\n                    <h1> {stageName} </h1>\n                    <p> {stageDesc} </p>\n                    {Object.keys(menu[stageNum][\"items\"]).map(item_key => {\n                      var item = menu[stageNum][\"items\"][item_key];\n                      return (\n                        <ul key={item_key} className=\"pl-0\">\n                          <MenuItem\n                            key={item.id}\n                            id={item.id}\n                            title={item.title}\n                            description={item.description}\n                            price={item.price}\n                            sendToTable={sendToTable}\n                            category={item.category}\n                            tableUsers={tableUsers}\n                            match={match}\n                            userId={userId}\n                            //deleteMenuItem={deleteMenuItem}\n                          />\n                        </ul>\n                      );\n                    })}\n                    <SignOutButton\n                      userId={userId}\n                      restaurant={thisRest}\n                      table={params.table}\n                    />\n                  </div>\n                  <div className=\"fixed-bottom mb-4 d-flex justify-content-center\">\n                    <a href={\"/\" + thisRest + \"/menu/\" + table}>\n                      <button className=\"btn btn-dark btn-lg\">\n                        View Cart{\" \"}\n                        {cartSize != 0 ? (\n                          <span className=\"badge badge-success\">\n                            {\" \"}\n                            {cartSize}{\" \"}\n                          </span>\n                        ) : null}\n                      </button>\n                    </a>\n                  </div>\n                </Fragment>\n              )}\n            </Fragment>\n          )}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default CustomerMenu;\n"]},"metadata":{},"sourceType":"module"}