{"ast":null,"code":"var _jsxFileName = \"/Users/mehulgore/projects/dinin/client/src/restaurant/FileUpload.js\";\nimport { CSVReader } from \"react-papaparse\";\nimport React, { useState, useEffect } from \"react\";\nimport * as firebase from \"firebase\";\n\nconst FileUpload = props => {\n  const restaurant = props.match.params.restaurant;\n\n  const handleOnDrop = data => {\n    var stageCount = 0;\n    var thisStage = 0;\n    var categories = {};\n    var database = firebase.database();\n    database.ref(restaurant).child(\"menu\").remove();\n    var finalMenu = {};\n\n    for (var itemArray of data) {\n      var itemData = itemArray.data;\n\n      if (itemData.length < 4) {\n        // do not accept csv row under certain size\n        return;\n      }\n\n      var category = itemData[0];\n      var title = itemData[1];\n      var description = itemData[2];\n      var price = itemData[3];\n\n      if (!(category in categories)) {\n        // category has not been added, create new structure\n        thisStage = stageCount;\n        finalMenu[thisStage] = {};\n        finalMenu[thisStage][\"items\"] = [];\n        categories[category] = thisStage;\n        stageCount = stageCount + 1;\n      } else {\n        thisStage = categories[category];\n      }\n\n      if (title == \"\" && price == \"\") {\n        // stage description\n        finalMenu[thisStage][\"stage_desc\"] = description;\n        database.ref(restaurant).child(\"menu\").child(thisStage).update({\n          stage_desc: description\n        });\n        continue;\n      }\n\n      var tempItem = {\n        title: title,\n        description: description,\n        price: price,\n        category: category\n      };\n      var key = database.ref(restaurant).child(\"menu\").child(thisStage).child(\"items\").push(tempItem).key;\n      database.ref(restaurant).child(\"menu\").child(thisStage).update({\n        stage_name: category\n      });\n      tempItem.id = key;\n      finalMenu[thisStage][\"items\"].push(tempItem);\n      finalMenu[thisStage][\"stage_name\"] = category;\n    }\n\n    console.log(finalMenu);\n    props.handleSetMenu(finalMenu);\n  };\n\n  const handleOnError = (err, file, inputElem, reason) => {\n    console.log(err);\n  };\n\n  const handleOnRemoveFile = data => {\n    console.log(\"---------------------------\");\n    console.log(data);\n    console.log(\"---------------------------\");\n  };\n\n  return /*#__PURE__*/React.createElement(CSVReader, {\n    onDrop: handleOnDrop,\n    onError: handleOnError,\n    addRemoveButton: true,\n    onRemoveFile: handleOnRemoveFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, \"Drop CSV file here or click to upload.\"));\n};\n\nexport default FileUpload;","map":{"version":3,"sources":["/Users/mehulgore/projects/dinin/client/src/restaurant/FileUpload.js"],"names":["CSVReader","React","useState","useEffect","firebase","FileUpload","props","restaurant","match","params","handleOnDrop","data","stageCount","thisStage","categories","database","ref","child","remove","finalMenu","itemArray","itemData","length","category","title","description","price","update","stage_desc","tempItem","key","push","stage_name","id","console","log","handleSetMenu","handleOnError","err","file","inputElem","reason","handleOnRemoveFile"],"mappings":"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","sourcesContent":["import { CSVReader } from \"react-papaparse\";\nimport React, { useState, useEffect } from \"react\";\nimport * as firebase from \"firebase\";\n\nconst FileUpload = props => {\n  const restaurant = props.match.params.restaurant;\n\n  const handleOnDrop = data => {\n    var stageCount = 0;\n    var thisStage = 0;\n    var categories = {};\n    var database = firebase.database();\n    database\n      .ref(restaurant)\n      .child(\"menu\")\n      .remove();\n    var finalMenu = {};\n    for (var itemArray of data) {\n      var itemData = itemArray.data;\n      if (itemData.length < 4) {\n        // do not accept csv row under certain size\n        return;\n      }\n      var category = itemData[0];\n      var title = itemData[1];\n      var description = itemData[2];\n      var price = itemData[3];\n      if (!(category in categories)) {\n        // category has not been added, create new structure\n        thisStage = stageCount;\n        finalMenu[thisStage] = {};\n        finalMenu[thisStage][\"items\"] = [];\n        categories[category] = thisStage;\n        stageCount = stageCount + 1;\n      } else {\n        thisStage = categories[category];\n      }\n      if (title == \"\" && price == \"\") {\n        // stage description\n        finalMenu[thisStage][\"stage_desc\"] = description;\n        database\n          .ref(restaurant)\n          .child(\"menu\")\n          .child(thisStage)\n          .update({ stage_desc: description });\n        continue;\n      }\n      var tempItem = {\n        title: title,\n        description: description,\n        price: price,\n        category: category\n      };\n      var key = database\n        .ref(restaurant)\n        .child(\"menu\")\n        .child(thisStage)\n        .child(\"items\")\n        .push(tempItem).key;\n      database\n        .ref(restaurant)\n        .child(\"menu\")\n        .child(thisStage)\n        .update({ stage_name: category });\n      tempItem.id = key;\n      finalMenu[thisStage][\"items\"].push(tempItem);\n      finalMenu[thisStage][\"stage_name\"] = category;\n    }\n    console.log(finalMenu);\n    props.handleSetMenu(finalMenu);\n  };\n\n  const handleOnError = (err, file, inputElem, reason) => {\n    console.log(err);\n  };\n\n  const handleOnRemoveFile = data => {\n    console.log(\"---------------------------\");\n    console.log(data);\n    console.log(\"---------------------------\");\n  };\n\n  return (\n    <CSVReader\n      onDrop={handleOnDrop}\n      onError={handleOnError}\n      addRemoveButton\n      onRemoveFile={handleOnRemoveFile}\n    >\n      <span>Drop CSV file here or click to upload.</span>\n    </CSVReader>\n  );\n};\n\nexport default FileUpload;\n"]},"metadata":{},"sourceType":"module"}