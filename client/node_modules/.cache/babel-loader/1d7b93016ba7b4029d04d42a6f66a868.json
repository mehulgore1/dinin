{"ast":null,"code":"var _jsxFileName = \"/Users/mehulgore/projects/dinin/client/src/restaurant/MenuEditor.js\";\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport \"./App.css\";\nimport * as firebase from \"firebase\";\nimport FileUpload from \"./FileUpload\";\nimport EditMenuItem from \"./EditMenuItem\";\nimport { useHistory, generatePath } from \"react-router-dom\";\nimport TopBarMenu from \"../TopBarMenu\";\nimport { useAlert } from \"react-alert\";\n\nconst AddItemForm = props => {\n  const alert = useAlert();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const database = firebase.database();\n\n  const addItem = () => {\n    if (!price.match(/^\\d+\\.\\d{0,2}$/)) {\n      window.alert(\"Please enter a valid price to 2 decimal places\");\n      return;\n    } else if (title == \"\") {\n      window.alert(\"Please enter a title for this item\");\n      return;\n    }\n\n    var item = {\n      price: price,\n      category: props.stageName,\n      description: description,\n      title: title\n    };\n    database.ref(props.restaurant).child(\"menu\").child(props.stage).child(\"items\").push(item);\n    setTitle(\"\");\n    setDescription(\"\");\n    setPrice(\"\");\n    alert.info(\"Item Added!\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \" Title \"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control mt-2\",\n    type: \"text\",\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \" Description \"), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"form-control mt-2\",\n    type: \"textarea\",\n    value: description,\n    onChange: e => setDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \" Price \"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control mt-2\",\n    type: \"text\",\n    value: price,\n    onChange: e => setPrice(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-around mt-3 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-lg btn-dark btn-block\",\n    onClick: addItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Add Item\")));\n};\n\nconst MenuEditor = props => {\n  var database = firebase.database();\n  const history = useHistory();\n  const [menu, setMenu] = useState([]);\n  const [restaurant, setRestaurant] = useState(\"\");\n  const {\n    match\n  } = props;\n  const params = match.params;\n  const tempRest = match.params.restaurant;\n  const [stageNum, setStageNum] = useState(0);\n  const [stageDesc, setStageDesc] = useState(\"\");\n  const [stageName, setStageName] = useState(\"\");\n  const [stageNames, setStageNames] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [editTitle, setEditTitle] = useState(false);\n  const [editDesc, setEditDesc] = useState(false);\n  const [editStage, setEditStage] = useState(false);\n  const [newStageName, setNewStageName] = useState(\"\");\n  useEffect(() => {\n    setStageNum(params.stage);\n  }, [props.location]);\n  useEffect(() => {\n    if (menu != null && menu[stageNum] != null) {\n      setStageName(menu[stageNum][\"stage_name\"]);\n      setStageDesc(menu[stageNum][\"stage_desc\"]);\n      setIsLoading(false);\n    }\n  }, [menu, stageNum]);\n\n  const routeToStage = stage => {\n    const path = generatePath(match.path, {\n      restaurant: restaurant,\n      stage: stage\n    });\n    history.replace(path);\n  };\n\n  useEffect(() => {\n    setRestaurant(match.params.restaurant);\n    database.ref(tempRest).child(\"menu\").on(\"value\", function (snapshot) {\n      var tempMenu = snapshot.val();\n\n      for (var stage in tempMenu) {\n        // get stage names for menu\n        var temp = stageNames;\n        temp[stage] = tempMenu[stage][\"stage_name\"];\n        setStageNames(temp);\n      }\n\n      setMenu(tempMenu);\n    });\n  }, []);\n\n  const handleSetMenu = menu => {\n    setMenu(menu);\n  };\n\n  const saveStageName = () => {\n    database.ref(tempRest).child(\"menu\").child(stageNum).update({\n      stage_name: stageName\n    });\n    setEditTitle(false);\n  };\n\n  const saveStageDesc = () => {\n    database.ref(tempRest).child(\"menu\").child(stageNum).update({\n      stage_desc: stageDesc\n    });\n    setEditDesc(false);\n  };\n\n  const addStage = () => {\n    var nextStageNum = Object.keys(stageNames).length;\n    database.ref(tempRest).child(\"menu\").child(nextStageNum).update({\n      stage_name: newStageName,\n      stage_desc: \"\",\n      items: \"null\"\n    });\n    setEditStage(false);\n    routeToStage(nextStageNum);\n  };\n\n  const deleteStage = () => {\n    var confirm = window.confirm(\"Are you sure you want to delete this category and all its items?\");\n\n    if (confirm) {\n      routeToStage(0);\n      database.ref(tempRest).child(\"menu\").child(stageNum).remove();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 5\n    }\n  }, !isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mt-5 mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }, \"Manager dashboard for \", restaurant, \" \"), /*#__PURE__*/React.createElement(FileUpload, {\n    match: match,\n    handleSetMenu: handleSetMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TopBarMenu, {\n    stageNum: stageNum,\n    stageNames: stageNames,\n    routeToStage: routeToStage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }), editStage ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control mt-2\",\n    type: \"text\",\n    value: newStageName,\n    onChange: e => setNewStageName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-dark\",\n    onClick: () => addStage(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 15\n    }\n  }, \" \", \"Save\", \" \")) : /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn item btn-outline-dark\",\n    onClick: () => setEditStage(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }, \"+ Add Category\"), /*#__PURE__*/React.createElement(AddItemForm, {\n    stageName: stageName,\n    stage: stageNum,\n    restaurant: restaurant,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 11\n    }\n  }), editTitle ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control mt-2\",\n    placeholder: \"Edit Category Title\",\n    type: \"text\",\n    value: stageName,\n    onChange: e => setStageName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-dark\",\n    onClick: () => saveStageName(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 15\n    }\n  }, \" \", \"Save\", \" \")) : /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }, stageName, \" \", /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-warning\",\n    onClick: () => setEditTitle(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 15\n    }\n  }, \" \", \"Edit Title\", \" \")), editDesc ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control mt-2\",\n    type: \"text\",\n    value: stageDesc,\n    onChange: e => setStageDesc(e.target.value),\n    placeholder: \"Edit Category Description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-dark\",\n    onClick: () => saveStageDesc(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 15\n    }\n  }, \" \", \"Save\", \" \")) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }\n  }, stageDesc, \" \", /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-warning\",\n    onClick: () => setEditDesc(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 15\n    }\n  }, \" \", \"Edit Description\", \" \")), /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 11\n    }\n  }, menu[stageNum] != null && menu[stageNum][\"items\"] != null && menu[stageNum][\"items\"] != \"null\" ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 15\n    }\n  }, Object.keys(menu[stageNum][\"items\"]).map(item_key => {\n    var item = menu[stageNum][\"items\"][item_key];\n    return /*#__PURE__*/React.createElement(EditMenuItem, {\n      key: item_key,\n      item_key: item_key,\n      item: item,\n      stage: stageNum,\n      restaurant: restaurant,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 21\n      }\n    });\n  })) : null)) : null, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-danger btn-block\",\n    onClick: () => deleteStage(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }\n  }, \"Delete Whole Category\"));\n};\n\nexport default MenuEditor;","map":{"version":3,"sources":["/Users/mehulgore/projects/dinin/client/src/restaurant/MenuEditor.js"],"names":["React","useState","useEffect","Fragment","firebase","FileUpload","EditMenuItem","useHistory","generatePath","TopBarMenu","useAlert","AddItemForm","props","alert","title","setTitle","description","setDescription","price","setPrice","database","addItem","match","window","item","category","stageName","ref","restaurant","child","stage","push","info","e","target","value","MenuEditor","history","menu","setMenu","setRestaurant","params","tempRest","stageNum","setStageNum","stageDesc","setStageDesc","setStageName","stageNames","setStageNames","isLoading","setIsLoading","editTitle","setEditTitle","editDesc","setEditDesc","editStage","setEditStage","newStageName","setNewStageName","location","routeToStage","path","replace","on","snapshot","tempMenu","val","temp","handleSetMenu","saveStageName","update","stage_name","saveStageDesc","stage_desc","addStage","nextStageNum","Object","keys","length","items","deleteStage","confirm","remove","map","item_key"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\nimport \"./App.css\";\nimport * as firebase from \"firebase\";\nimport FileUpload from \"./FileUpload\";\nimport EditMenuItem from \"./EditMenuItem\";\nimport { useHistory, generatePath } from \"react-router-dom\";\nimport TopBarMenu from \"../TopBarMenu\";\nimport { useAlert } from \"react-alert\";\n\nconst AddItemForm = props => {\n  const alert = useAlert();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const database = firebase.database();\n\n  const addItem = () => {\n    if (!price.match(/^\\d+\\.\\d{0,2}$/)) {\n      window.alert(\"Please enter a valid price to 2 decimal places\");\n      return;\n    } else if (title == \"\") {\n      window.alert(\"Please enter a title for this item\");\n      return;\n    }\n    var item = {\n      price: price,\n      category: props.stageName,\n      description: description,\n      title: title\n    };\n    database\n      .ref(props.restaurant)\n      .child(\"menu\")\n      .child(props.stage)\n      .child(\"items\")\n      .push(item);\n    setTitle(\"\");\n    setDescription(\"\");\n    setPrice(\"\");\n    alert.info(\"Item Added!\");\n  };\n\n  return (\n    <div>\n      <div>\n        <h4> Title </h4>\n        <input\n          className=\"form-control mt-2\"\n          type=\"text\"\n          value={title}\n          onChange={e => setTitle(e.target.value)}\n        />\n      </div>\n      <div>\n        <h4> Description </h4>\n        <textarea\n          className=\"form-control mt-2\"\n          type=\"textarea\"\n          value={description}\n          onChange={e => setDescription(e.target.value)}\n        />\n      </div>\n      <div>\n        <h4> Price </h4>\n        <input\n          className=\"form-control mt-2\"\n          type=\"text\"\n          value={price}\n          onChange={e => setPrice(e.target.value)}\n        />\n      </div>\n\n      <div className=\"d-flex justify-content-around mt-3 mb-3\">\n        <button className=\"btn btn-lg btn-dark btn-block\" onClick={addItem}>\n          Add Item\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst MenuEditor = props => {\n  var database = firebase.database();\n  const history = useHistory();\n  const [menu, setMenu] = useState([]);\n  const [restaurant, setRestaurant] = useState(\"\");\n  const { match } = props;\n  const params = match.params;\n  const tempRest = match.params.restaurant;\n  const [stageNum, setStageNum] = useState(0);\n  const [stageDesc, setStageDesc] = useState(\"\");\n  const [stageName, setStageName] = useState(\"\");\n  const [stageNames, setStageNames] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [editTitle, setEditTitle] = useState(false);\n  const [editDesc, setEditDesc] = useState(false);\n  const [editStage, setEditStage] = useState(false);\n  const [newStageName, setNewStageName] = useState(\"\");\n\n  useEffect(() => {\n    setStageNum(params.stage);\n  }, [props.location]);\n\n  useEffect(() => {\n    if (menu != null && menu[stageNum] != null) {\n      setStageName(menu[stageNum][\"stage_name\"]);\n      setStageDesc(menu[stageNum][\"stage_desc\"]);\n      setIsLoading(false);\n    }\n  }, [menu, stageNum]);\n\n  const routeToStage = stage => {\n    const path = generatePath(match.path, {\n      restaurant: restaurant,\n      stage: stage\n    });\n    history.replace(path);\n  };\n\n  useEffect(() => {\n    setRestaurant(match.params.restaurant);\n    database\n      .ref(tempRest)\n      .child(\"menu\")\n      .on(\"value\", function(snapshot) {\n        var tempMenu = snapshot.val();\n        for (var stage in tempMenu) {\n          // get stage names for menu\n          var temp = stageNames;\n          temp[stage] = tempMenu[stage][\"stage_name\"];\n          setStageNames(temp);\n        }\n        setMenu(tempMenu);\n      });\n  }, []);\n\n  const handleSetMenu = menu => {\n    setMenu(menu);\n  };\n\n  const saveStageName = () => {\n    database\n      .ref(tempRest)\n      .child(\"menu\")\n      .child(stageNum)\n      .update({ stage_name: stageName });\n    setEditTitle(false);\n  };\n\n  const saveStageDesc = () => {\n    database\n      .ref(tempRest)\n      .child(\"menu\")\n      .child(stageNum)\n      .update({ stage_desc: stageDesc });\n    setEditDesc(false);\n  };\n\n  const addStage = () => {\n    var nextStageNum = Object.keys(stageNames).length;\n    database\n      .ref(tempRest)\n      .child(\"menu\")\n      .child(nextStageNum)\n      .update({ stage_name: newStageName, stage_desc: \"\", items: \"null\" });\n    setEditStage(false);\n    routeToStage(nextStageNum);\n  };\n\n  const deleteStage = () => {\n    var confirm = window.confirm(\n      \"Are you sure you want to delete this category and all its items?\"\n    );\n    if (confirm) {\n      routeToStage(0);\n      database\n        .ref(tempRest)\n        .child(\"menu\")\n        .child(stageNum)\n        .remove();\n    }\n  };\n\n  return (\n    <div>\n      {!isLoading ? (\n        <div className=\"container mt-5 mb-5\">\n          <h1>Manager dashboard for {restaurant} </h1>\n          <FileUpload match={match} handleSetMenu={handleSetMenu} />\n          {/* <UpdateMenuForm addMenuItem={addMenuItem} /> */}\n          <TopBarMenu\n            stageNum={stageNum}\n            stageNames={stageNames}\n            routeToStage={routeToStage}\n          />\n          {editStage ? (\n            <div>\n              <input\n                className=\"form-control mt-2\"\n                type=\"text\"\n                value={newStageName}\n                onChange={e => setNewStageName(e.target.value)}\n              />\n              <button className=\"btn btn-dark\" onClick={() => addStage()}>\n                {\" \"}\n                Save{\" \"}\n              </button>\n            </div>\n          ) : (\n            <button\n              className=\"btn item btn-outline-dark\"\n              onClick={() => setEditStage(true)}\n            >\n              + Add Category\n            </button>\n          )}\n\n          <AddItemForm\n            stageName={stageName}\n            stage={stageNum}\n            restaurant={restaurant}\n          />\n          {editTitle ? (\n            <div>\n              <input\n                className=\"form-control mt-2\"\n                placeholder=\"Edit Category Title\"\n                type=\"text\"\n                value={stageName}\n                onChange={e => setStageName(e.target.value)}\n              />\n              <button className=\"btn btn-dark\" onClick={() => saveStageName()}>\n                {\" \"}\n                Save{\" \"}\n              </button>\n            </div>\n          ) : (\n            <h1>\n              {stageName}{\" \"}\n              <button\n                className=\"btn btn-warning\"\n                onClick={() => setEditTitle(true)}\n              >\n                {\" \"}\n                Edit Title{\" \"}\n              </button>\n            </h1>\n          )}\n\n          {editDesc ? (\n            <div>\n              <input\n                className=\"form-control mt-2\"\n                type=\"text\"\n                value={stageDesc}\n                onChange={e => setStageDesc(e.target.value)}\n                placeholder=\"Edit Category Description\"\n              />\n              <button className=\"btn btn-dark\" onClick={() => saveStageDesc()}>\n                {\" \"}\n                Save{\" \"}\n              </button>\n            </div>\n          ) : (\n            <p>\n              {stageDesc}{\" \"}\n              <button\n                className=\"btn btn-warning\"\n                onClick={() => setEditDesc(true)}\n              >\n                {\" \"}\n                Edit Description{\" \"}\n              </button>\n            </p>\n          )}\n          <Fragment>\n            {menu[stageNum] != null &&\n            menu[stageNum][\"items\"] != null &&\n            menu[stageNum][\"items\"] != \"null\" ? (\n              <Fragment>\n                {Object.keys(menu[stageNum][\"items\"]).map(item_key => {\n                  var item = menu[stageNum][\"items\"][item_key];\n                  return (\n                    <EditMenuItem\n                      key={item_key}\n                      item_key={item_key}\n                      item={item}\n                      stage={stageNum}\n                      restaurant={restaurant}\n                    />\n                  );\n                })}\n              </Fragment>\n            ) : null}\n          </Fragment>\n        </div>\n      ) : null}\n      <button\n        className=\"btn btn-danger btn-block\"\n        onClick={() => deleteStage()}\n      >\n        Delete Whole Category\n      </button>\n    </div>\n  );\n};\n\nexport default MenuEditor;\n"]},"metadata":{},"sourceType":"module"}