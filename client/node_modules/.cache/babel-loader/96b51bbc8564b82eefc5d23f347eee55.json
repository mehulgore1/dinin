{"ast":null,"code":"var _jsxFileName = \"/Users/mehulgore/projects/dinin/client/src/eater/TableBasket.js\";\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport * as firebase from \"firebase\";\nimport WaiterRequest from \"./WaiterRequest\";\nimport { useHistory, generatePath } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport TableDone from \"./TableDone\";\nimport BasketItem from \"./BasketItem\";\nimport axios from \"axios\";\nimport { useStripe } from \"@stripe/react-stripe-js\";\n\nconst TableBasket = props => {\n  const alert = useAlert();\n  const history = useHistory();\n  const stripe = useStripe();\n  const database = firebase.database();\n  const [tableData, setTableData] = useState({});\n  const [reverseBatches, setReverseBatches] = useState([]);\n  const [reverseRequests, setReverseRequests] = useState([]);\n  const [currentBatch, setCurrentBatch] = useState(1);\n  const {\n    match\n  } = props;\n  const [tableDone, setTableDone] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const [hidePastOrders, setHidePastOrders] = useState(false);\n  useEffect(() => {\n    initSignedInState();\n    initTableData();\n  }, []);\n  useEffect(() => {\n    if (\"batches\" in tableData) {\n      const arr = [];\n      Object.keys(tableData[\"batches\"]).forEach(key => {\n        arr.push({\n          [key]: tableData[\"batches\"][key]\n        });\n      });\n      setReverseBatches(arr.slice(0).reverse());\n    }\n\n    if (\"requests\" in tableData) {\n      const arr = [];\n      Object.keys(tableData[\"requests\"]).forEach(key => {\n        arr.push({\n          [key]: tableData[\"requests\"][key]\n        });\n      });\n      setReverseRequests(arr.slice(0).reverse());\n    }\n  }, [tableData]);\n  useEffect(() => {\n    if (userId != null) {\n      initTableDone();\n    }\n  }, [userId]);\n\n  const initTableDone = () => {\n    database.ref(match.params.restaurant).child(\"tables\").child(match.params.table).on(\"value\", function (snapshot) {\n      if (snapshot.hasChild(\"past_users\")) {\n        database.ref(match.params.restaurant).child(\"tables\").child(match.params.table).child(\"past_users\").on(\"value\", function (snapshot) {\n          setTableDone(snapshot.hasChild(userId));\n        });\n      } else {\n        // previously unseen table, set to false\n        setTableDone(false);\n      }\n    });\n  };\n\n  const initSignedInState = () => {\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        console.log(\"user signed in \");\n        setUserId(user.uid);\n      } else {\n        console.log(\"user NOT signed in \");\n        setUserId(null);\n      }\n    });\n  };\n\n  const initTableData = () => {\n    database.ref(match.params.restaurant).child(\"tables\").once(\"value\").then(function (snapshot) {\n      return snapshot.hasChild(match.params.table);\n    }).then(exists => {\n      if (exists) {\n        database.ref(match.params.restaurant).child(\"tables\").child(match.params.table).on(\"value\", function (snapshot) {\n          if (snapshot.val() != null) {\n            setTableData(snapshot.val());\n          } else {\n            setTableData({});\n          }\n        });\n        database.ref(match.params.restaurant).child(\"tables\").child(match.params.table).child(\"batches\").limitToLast(1).on(\"value\", function (snapshot) {\n          snapshot.forEach(function (child) {\n            setCurrentBatch(child.key);\n          });\n        });\n      }\n    });\n  };\n\n  const handleAddMoreItems = () => {\n    var seat = tableData[\"users\"][userId][\"seat\"];\n    const path = generatePath(match.path, {\n      restaurant: match.params.restaurant,\n      table: match.params.table\n    });\n    var pathExtra = \"/\" + seat + \"/0\";\n    history.replace(path + pathExtra);\n  };\n\n  const formatAMPM = date => {\n    var hours = date.getHours();\n    var minutes = date.getMinutes();\n    var ampm = hours >= 12 ? \"PM\" : \"AM\";\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n    var strTime = hours + \":\" + minutes + \" \" + ampm;\n    return strTime;\n  };\n\n  const showConfirmAlert = () => {\n    var confirmOrder = window.confirm(\"Are you sure you want to order these items?\");\n\n    if (confirmOrder) {\n      handleBatchOrder();\n    }\n  };\n\n  const handleBatchOrder = () => {\n    var batchObject = tableData[\"batches\"][currentBatch];\n\n    if (batchObject == \"\") {\n      return;\n    }\n\n    batchObject[\"table\"] = match.params.table;\n\n    for (var seat in tableData[\"batches\"][currentBatch][\"seat_data\"]) {\n      for (var item_key in tableData[\"batches\"][currentBatch][\"seat_data\"][seat][\"items\"]) {\n        tableData[\"batches\"][currentBatch][\"seat_data\"][seat][\"items\"][item_key][\"ordered\"] = true;\n        database.ref(match.params.restaurant).child(\"tables\").child(match.params.table).child(\"batches\").child(currentBatch).child(\"seat_data\").child(seat).child(\"items\").child(item_key).update({\n          ordered: true\n        });\n      }\n    }\n\n    var time = formatAMPM(new Date());\n    database.ref(match.params.restaurant).child(\"tables\").child(match.params.table).child(\"batches\").child(currentBatch).child(\"ordered_at\").set(time);\n    database.ref(match.params.restaurant).child(\"order_queue\").child(currentBatch).set(batchObject);\n    var userSeat = tableData[\"users\"][userId][\"seat\"];\n    var seat_data = tableData[\"batches\"][currentBatch][\"seat_data\"];\n\n    for (var seat in seat_data) {\n      var user_id = getUserIdForSeat(seat);\n      var userItems = seat_data[seat][\"items\"];\n      database.ref(match.params.restaurant).child(\"tables\").child(match.params.table).child(\"users\").child(user_id).child(\"items\").update(userItems);\n    }\n\n    var batch_key = database.ref(match.params.restaurant).child(\"tables\").child(match.params.table).child(\"batches\").push(\"\").key;\n    setCurrentBatch(batch_key);\n    alert.success(\"Order Sent, Awaiting Status\");\n  };\n\n  const deleteItem = (batch_key, seat_num, item_key) => {\n    const batch_key_param = batch_key;\n    database.ref(match.params.restaurant).child(\"tables\").child(match.params.table).child(\"batches\").child(batch_key).child(\"seat_data\").child(seat_num).child(\"items\").child(item_key).remove(); // removed only item, old batch key does not exist\n\n    database.ref(match.params.restaurant).child(\"tables\").child(match.params.table).child(\"batches\").once(\"value\", function (snapshot) {\n      console.log(batch_key_param);\n\n      if (!snapshot.hasChild(batch_key_param)) {\n        // set to same batch key\n        database.ref(match.params.restaurant).child(\"tables\").child(match.params.table).child(\"batches\").child(batch_key_param).set(\"\");\n      }\n    });\n  };\n\n  const hasBeenOrdered = batch_key => {\n    return tableData[\"batches\"] != null && tableData[\"batches\"][batch_key] != null && tableData[\"batches\"][batch_key] != \"\" && \"ordered_at\" in tableData[\"batches\"][batch_key];\n  };\n\n  const emptyOrder = batch_key => {\n    return tableData[\"batches\"] != null && tableData[\"batches\"][batch_key] != null && tableData[\"batches\"][batch_key] == \"\";\n  };\n\n  const showBatchText = batch_key => {\n    if (!emptyOrder(batch_key) && hasBeenOrdered(batch_key)) {\n      // item ordered, show time\n      return /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 14\n        }\n      }, \" \", tableData[\"batches\"][batch_key][\"ordered_at\"], \" \");\n    } else if (!emptyOrder(batch_key) && !hasBeenOrdered(batch_key)) {\n      // pending order, show \"yet to order\"\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 14\n        }\n      }, \" Your Table's Cart \");\n    } else {\n      return null;\n    }\n  };\n\n  const showOrderButton = batch_key => {\n    return !emptyOrder(batch_key) && !hasBeenOrdered(batch_key);\n  };\n\n  const getUserNameForSeat = this_seat => {\n    for (var user in tableData[\"users\"]) {\n      if (tableData[\"users\"][user][\"seat\"] == this_seat) {\n        return tableData[\"users\"][user][\"name\"];\n      }\n    }\n  };\n\n  const getUserIdForSeat = this_seat => {\n    for (var user_id in tableData[\"users\"]) {\n      if (tableData[\"users\"][user_id][\"seat\"] == this_seat) {\n        return user_id;\n      }\n    }\n  };\n\n  const userInThisSeat = this_seat => {\n    return tableData[\"users\"] != null && tableData[\"users\"][userId] != null && tableData[\"users\"][userId][\"seat\"] == this_seat;\n  };\n\n  const handlePayment = () => {\n    console.log(\"payment process initiated\");\n    var user = {\n      phone: 2222222222,\n      email: \"test@test.com\"\n    };\n    axios.post(\"/api/create-customer\", {\n      user\n    }).then(res => {\n      var checkoutSession = res.data.checkoutSession;\n      var customer = res.data.customer;\n      stripe.redirectToCheckout({\n        sessionId: checkoutSession.id\n      }).then(result => {\n        console.log(result);\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 5\n    }\n  }, tableDone ? /*#__PURE__*/React.createElement(TableDone, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mt-3 mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(WaiterRequest, {\n    match: match,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-around mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-dark btn-lg mb-3\",\n    onClick: () => handleAddMoreItems(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 13\n    }\n  }, \"+ Add More Items\")), reverseBatches.map((batch_obj, batch_index) => {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      key: batch_index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 15\n      }\n    }, !hidePastOrders && batch_index == 1 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-around\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-light mb-3\",\n      onClick: () => setHidePastOrders(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 21\n      }\n    }, \"Hide Orders\")) : null, hidePastOrders && batch_index == 1 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-around\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-dark mb-3\",\n      onClick: () => setHidePastOrders(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 21\n      }\n    }, \"See Orders\")) : null, Object.keys(reverseBatches[batch_index] || {}).map((batch_key, index) => {\n      if (hidePastOrders && hasBeenOrdered(batch_key)) {\n        return null;\n      }\n\n      if (tableData[\"batches\"] == null || tableData[\"batches\"][batch_key] == null || tableData[\"batches\"][batch_key][\"seat_data\"] == null) {\n        return null;\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\",\n        key: batch_key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 23\n        }\n      }, showBatchText(batch_key), Object.keys(tableData[\"batches\"][batch_key][\"seat_data\"] || {}).map((seat, i) => {\n        var items = tableData[\"batches\"][batch_key][\"seat_data\"][seat][\"items\"];\n        return /*#__PURE__*/React.createElement(Fragment, {\n          key: seat,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          className: \"ml-3\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 31\n          }\n        }, getUserNameForSeat(seat)), Object.keys(items || {}).map((item_key, i) => {\n          var item = items[item_key];\n          const itemRef = database.ref(match.params.restaurant).child(\"tables\").child(match.params.table).child(\"batches\").child(batch_key).child(\"seat_data\").child(seat).child(\"items\").child(item_key);\n          return /*#__PURE__*/React.createElement(BasketItem, {\n            key: item_key,\n            item: item,\n            itemRef: itemRef,\n            item_key: item_key,\n            batch_key: batch_key,\n            seat: seat,\n            deleteItem: deleteItem,\n            tableData: tableData,\n            userInThisSeat: userInThisSeat,\n            userId: userId,\n            params: match.params,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 35\n            }\n          });\n        }));\n      }), showOrderButton(batch_key) ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-around mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-lg btn-dark btn-block\",\n        onClick: showConfirmAlert,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 29\n        }\n      }, \"Submit Items\")) : null);\n    }));\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 11\n    }\n  }, reverseRequests.length != 0 ? /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 44\n    }\n  }, \" Requests \") : null), reverseRequests.map((request_obj, index) => {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 15\n      }\n    }, Object.keys(reverseRequests[index] || {}).map((key, i) => {\n      if (tableData[\"requests\"] == null || tableData[\"requests\"][key] == null || tableData[\"requests\"][key][\"requestedAt\"] == null) {\n        return null;\n      }\n\n      return /*#__PURE__*/React.createElement(Fragment, {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container ml-3 mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 27\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 29\n        }\n      }, \" \", tableData[\"requests\"][key][\"requestedAt\"]), \" \")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 25\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 29\n        }\n      }, tableData[\"requests\"][key][\"request\"], \" :\", \" \"), tableData[\"requests\"][key][\"status\"]))));\n    }));\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-success btn-block\",\n    onClick: () => handlePayment(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 11\n    }\n  }, \"Finish and Pay\")));\n};\n\nexport default TableBasket;","map":{"version":3,"sources":["/Users/mehulgore/projects/dinin/client/src/eater/TableBasket.js"],"names":["React","useState","useEffect","Fragment","firebase","WaiterRequest","useHistory","generatePath","useAlert","TableDone","BasketItem","axios","useStripe","TableBasket","props","alert","history","stripe","database","tableData","setTableData","reverseBatches","setReverseBatches","reverseRequests","setReverseRequests","currentBatch","setCurrentBatch","match","tableDone","setTableDone","userId","setUserId","hidePastOrders","setHidePastOrders","initSignedInState","initTableData","arr","Object","keys","forEach","key","push","slice","reverse","initTableDone","ref","params","restaurant","child","table","on","snapshot","hasChild","auth","onAuthStateChanged","user","console","log","uid","once","then","exists","val","limitToLast","handleAddMoreItems","seat","path","pathExtra","replace","formatAMPM","date","hours","getHours","minutes","getMinutes","ampm","strTime","showConfirmAlert","confirmOrder","window","confirm","handleBatchOrder","batchObject","item_key","update","ordered","time","Date","set","userSeat","seat_data","user_id","getUserIdForSeat","userItems","batch_key","success","deleteItem","seat_num","batch_key_param","remove","hasBeenOrdered","emptyOrder","showBatchText","showOrderButton","getUserNameForSeat","this_seat","userInThisSeat","handlePayment","phone","email","post","res","checkoutSession","data","customer","redirectToCheckout","sessionId","id","result","map","batch_obj","batch_index","index","i","items","item","itemRef","length","request_obj"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport * as firebase from \"firebase\";\nimport WaiterRequest from \"./WaiterRequest\";\nimport { useHistory, generatePath } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport TableDone from \"./TableDone\";\nimport BasketItem from \"./BasketItem\";\nimport axios from \"axios\";\nimport { useStripe } from \"@stripe/react-stripe-js\";\n\nconst TableBasket = props => {\n  const alert = useAlert();\n  const history = useHistory();\n  const stripe = useStripe();\n\n  const database = firebase.database();\n  const [tableData, setTableData] = useState({});\n  const [reverseBatches, setReverseBatches] = useState([]);\n  const [reverseRequests, setReverseRequests] = useState([]);\n  const [currentBatch, setCurrentBatch] = useState(1);\n\n  const { match } = props;\n\n  const [tableDone, setTableDone] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const [hidePastOrders, setHidePastOrders] = useState(false);\n\n  useEffect(() => {\n    initSignedInState();\n    initTableData();\n  }, []);\n\n  useEffect(() => {\n    if (\"batches\" in tableData) {\n      const arr = [];\n      Object.keys(tableData[\"batches\"]).forEach(key => {\n        arr.push({ [key]: tableData[\"batches\"][key] });\n      });\n      setReverseBatches(arr.slice(0).reverse());\n    }\n    if (\"requests\" in tableData) {\n      const arr = [];\n      Object.keys(tableData[\"requests\"]).forEach(key => {\n        arr.push({ [key]: tableData[\"requests\"][key] });\n      });\n      setReverseRequests(arr.slice(0).reverse());\n    }\n  }, [tableData]);\n\n  useEffect(() => {\n    if (userId != null) {\n      initTableDone();\n    }\n  }, [userId]);\n\n  const initTableDone = () => {\n    database\n      .ref(match.params.restaurant)\n      .child(\"tables\")\n      .child(match.params.table)\n      .on(\"value\", function(snapshot) {\n        if (snapshot.hasChild(\"past_users\")) {\n          database\n            .ref(match.params.restaurant)\n            .child(\"tables\")\n            .child(match.params.table)\n            .child(\"past_users\")\n            .on(\"value\", function(snapshot) {\n              setTableDone(snapshot.hasChild(userId));\n            });\n        } else {\n          // previously unseen table, set to false\n          setTableDone(false);\n        }\n      });\n  };\n\n  const initSignedInState = () => {\n    firebase.auth().onAuthStateChanged(function(user) {\n      if (user) {\n        console.log(\"user signed in \");\n        setUserId(user.uid);\n      } else {\n        console.log(\"user NOT signed in \");\n        setUserId(null);\n      }\n    });\n  };\n\n  const initTableData = () => {\n    database\n      .ref(match.params.restaurant)\n      .child(\"tables\")\n      .once(\"value\")\n      .then(function(snapshot) {\n        return snapshot.hasChild(match.params.table);\n      })\n      .then(exists => {\n        if (exists) {\n          database\n            .ref(match.params.restaurant)\n            .child(\"tables\")\n            .child(match.params.table)\n            .on(\"value\", function(snapshot) {\n              if (snapshot.val() != null) {\n                setTableData(snapshot.val());\n              } else {\n                setTableData({});\n              }\n            });\n\n          database\n            .ref(match.params.restaurant)\n            .child(\"tables\")\n            .child(match.params.table)\n            .child(\"batches\")\n            .limitToLast(1)\n            .on(\"value\", function(snapshot) {\n              snapshot.forEach(function(child) {\n                setCurrentBatch(child.key);\n              });\n            });\n        }\n      });\n  };\n\n  const handleAddMoreItems = () => {\n    var seat = tableData[\"users\"][userId][\"seat\"];\n    const path = generatePath(match.path, {\n      restaurant: match.params.restaurant,\n      table: match.params.table\n    });\n    var pathExtra = \"/\" + seat + \"/0\";\n    history.replace(path + pathExtra);\n  };\n\n  const formatAMPM = date => {\n    var hours = date.getHours();\n    var minutes = date.getMinutes();\n    var ampm = hours >= 12 ? \"PM\" : \"AM\";\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n    var strTime = hours + \":\" + minutes + \" \" + ampm;\n    return strTime;\n  };\n\n  const showConfirmAlert = () => {\n    var confirmOrder = window.confirm(\n      \"Are you sure you want to order these items?\"\n    );\n    if (confirmOrder) {\n      handleBatchOrder();\n    }\n  };\n\n  const handleBatchOrder = () => {\n    var batchObject = tableData[\"batches\"][currentBatch];\n    if (batchObject == \"\") {\n      return;\n    }\n    batchObject[\"table\"] = match.params.table;\n\n    for (var seat in tableData[\"batches\"][currentBatch][\"seat_data\"]) {\n      for (var item_key in tableData[\"batches\"][currentBatch][\"seat_data\"][\n        seat\n      ][\"items\"]) {\n        tableData[\"batches\"][currentBatch][\"seat_data\"][seat][\"items\"][\n          item_key\n        ][\"ordered\"] = true;\n        database\n          .ref(match.params.restaurant)\n          .child(\"tables\")\n          .child(match.params.table)\n          .child(\"batches\")\n          .child(currentBatch)\n          .child(\"seat_data\")\n          .child(seat)\n          .child(\"items\")\n          .child(item_key)\n          .update({ ordered: true });\n      }\n    }\n\n    var time = formatAMPM(new Date());\n    database\n      .ref(match.params.restaurant)\n      .child(\"tables\")\n      .child(match.params.table)\n      .child(\"batches\")\n      .child(currentBatch)\n      .child(\"ordered_at\")\n      .set(time);\n\n    database\n      .ref(match.params.restaurant)\n      .child(\"order_queue\")\n      .child(currentBatch)\n      .set(batchObject);\n    var userSeat = tableData[\"users\"][userId][\"seat\"];\n    var seat_data = tableData[\"batches\"][currentBatch][\"seat_data\"];\n\n    for (var seat in seat_data) {\n      var user_id = getUserIdForSeat(seat);\n      var userItems = seat_data[seat][\"items\"];\n\n      database\n        .ref(match.params.restaurant)\n        .child(\"tables\")\n        .child(match.params.table)\n        .child(\"users\")\n        .child(user_id)\n        .child(\"items\")\n        .update(userItems);\n    }\n\n    var batch_key = database\n      .ref(match.params.restaurant)\n      .child(\"tables\")\n      .child(match.params.table)\n      .child(\"batches\")\n      .push(\"\").key;\n    setCurrentBatch(batch_key);\n\n    alert.success(\"Order Sent, Awaiting Status\");\n  };\n\n  const deleteItem = (batch_key, seat_num, item_key) => {\n    const batch_key_param = batch_key;\n    database\n      .ref(match.params.restaurant)\n      .child(\"tables\")\n      .child(match.params.table)\n      .child(\"batches\")\n      .child(batch_key)\n      .child(\"seat_data\")\n      .child(seat_num)\n      .child(\"items\")\n      .child(item_key)\n      .remove();\n    // removed only item, old batch key does not exist\n    database\n      .ref(match.params.restaurant)\n      .child(\"tables\")\n      .child(match.params.table)\n      .child(\"batches\")\n      .once(\"value\", function(snapshot) {\n        console.log(batch_key_param);\n        if (!snapshot.hasChild(batch_key_param)) {\n          // set to same batch key\n          database\n            .ref(match.params.restaurant)\n            .child(\"tables\")\n            .child(match.params.table)\n            .child(\"batches\")\n            .child(batch_key_param)\n            .set(\"\");\n        }\n      });\n  };\n\n  const hasBeenOrdered = batch_key => {\n    return (\n      tableData[\"batches\"] != null &&\n      tableData[\"batches\"][batch_key] != null &&\n      tableData[\"batches\"][batch_key] != \"\" &&\n      \"ordered_at\" in tableData[\"batches\"][batch_key]\n    );\n  };\n\n  const emptyOrder = batch_key => {\n    return (\n      tableData[\"batches\"] != null &&\n      tableData[\"batches\"][batch_key] != null &&\n      tableData[\"batches\"][batch_key] == \"\"\n    );\n  };\n\n  const showBatchText = batch_key => {\n    if (!emptyOrder(batch_key) && hasBeenOrdered(batch_key)) {\n      // item ordered, show time\n      return <h3> {tableData[\"batches\"][batch_key][\"ordered_at\"]} </h3>;\n    } else if (!emptyOrder(batch_key) && !hasBeenOrdered(batch_key)) {\n      // pending order, show \"yet to order\"\n      return <h1> Your Table's Cart </h1>;\n    } else {\n      return null;\n    }\n  };\n\n  const showOrderButton = batch_key => {\n    return !emptyOrder(batch_key) && !hasBeenOrdered(batch_key);\n  };\n\n  const getUserNameForSeat = this_seat => {\n    for (var user in tableData[\"users\"]) {\n      if (tableData[\"users\"][user][\"seat\"] == this_seat) {\n        return tableData[\"users\"][user][\"name\"];\n      }\n    }\n  };\n\n  const getUserIdForSeat = this_seat => {\n    for (var user_id in tableData[\"users\"]) {\n      if (tableData[\"users\"][user_id][\"seat\"] == this_seat) {\n        return user_id;\n      }\n    }\n  };\n\n  const userInThisSeat = this_seat => {\n    return (\n      tableData[\"users\"] != null &&\n      tableData[\"users\"][userId] != null &&\n      tableData[\"users\"][userId][\"seat\"] == this_seat\n    );\n  };\n\n  const handlePayment = () => {\n    console.log(\"payment process initiated\");\n    var user = {\n      phone: 2222222222,\n      email: \"test@test.com\"\n    };\n    axios.post(\"/api/create-customer\", { user }).then(res => {\n      var checkoutSession = res.data.checkoutSession;\n      var customer = res.data.customer;\n      stripe\n        .redirectToCheckout({\n          sessionId: checkoutSession.id\n        })\n        .then(result => {\n          console.log(result);\n        });\n    });\n  };\n\n  return (\n    <div className=\"\">\n      {tableDone ? (\n        <TableDone />\n      ) : (\n        <div className=\"container mt-3 mb-5\">\n          <WaiterRequest match={match} />\n          <div className=\"d-flex justify-content-around mt-3\">\n            <button\n              className=\"btn btn-dark btn-lg mb-3\"\n              onClick={() => handleAddMoreItems()}\n            >\n              + Add More Items\n            </button>\n          </div>\n          {reverseBatches.map((batch_obj, batch_index) => {\n            return (\n              <Fragment key={batch_index}>\n                {!hidePastOrders && batch_index == 1 ? (\n                  <div className=\"d-flex justify-content-around\">\n                    <button\n                      className=\"btn btn-light mb-3\"\n                      onClick={() => setHidePastOrders(true)}\n                    >\n                      Hide Orders\n                    </button>\n                  </div>\n                ) : null}\n                {hidePastOrders && batch_index == 1 ? (\n                  <div className=\"d-flex justify-content-around\">\n                    <button\n                      className=\"btn btn-dark mb-3\"\n                      onClick={() => setHidePastOrders(false)}\n                    >\n                      See Orders\n                    </button>\n                  </div>\n                ) : null}\n                {Object.keys(reverseBatches[batch_index] || {}).map(\n                  (batch_key, index) => {\n                    if (hidePastOrders && hasBeenOrdered(batch_key)) {\n                      return null;\n                    }\n                    if (\n                      tableData[\"batches\"] == null ||\n                      tableData[\"batches\"][batch_key] == null ||\n                      tableData[\"batches\"][batch_key][\"seat_data\"] == null\n                    ) {\n                      return null;\n                    }\n                    return (\n                      <div className=\"\" key={batch_key}>\n                        {showBatchText(batch_key)}\n                        {Object.keys(\n                          tableData[\"batches\"][batch_key][\"seat_data\"] || {}\n                        ).map((seat, i) => {\n                          var items =\n                            tableData[\"batches\"][batch_key][\"seat_data\"][seat][\n                              \"items\"\n                            ];\n                          return (\n                            <Fragment key={seat}>\n                              <h3 className=\"ml-3\">\n                                {getUserNameForSeat(seat)}\n                              </h3>\n                              {Object.keys(items || {}).map((item_key, i) => {\n                                var item = items[item_key];\n                                const itemRef = database\n                                  .ref(match.params.restaurant)\n                                  .child(\"tables\")\n                                  .child(match.params.table)\n                                  .child(\"batches\")\n                                  .child(batch_key)\n                                  .child(\"seat_data\")\n                                  .child(seat)\n                                  .child(\"items\")\n                                  .child(item_key);\n\n                                return (\n                                  <BasketItem\n                                    key={item_key}\n                                    item={item}\n                                    itemRef={itemRef}\n                                    item_key={item_key}\n                                    batch_key={batch_key}\n                                    seat={seat}\n                                    deleteItem={deleteItem}\n                                    tableData={tableData}\n                                    userInThisSeat={userInThisSeat}\n                                    userId={userId}\n                                    params={match.params}\n                                  />\n                                );\n                              })}\n                            </Fragment>\n                          );\n                        })}\n                        {showOrderButton(batch_key) ? (\n                          <div className=\"d-flex justify-content-around mb-3\">\n                            <button\n                              className=\"btn btn-lg btn-dark btn-block\"\n                              onClick={showConfirmAlert}\n                            >\n                              Submit Items\n                            </button>\n                          </div>\n                        ) : null}\n                      </div>\n                    );\n                  }\n                )}\n              </Fragment>\n            );\n          })}\n          <div className=\"\">\n            {reverseRequests.length != 0 ? <h1> Requests </h1> : null}\n          </div>\n          {reverseRequests.map((request_obj, index) => {\n            return (\n              <Fragment key={index}>\n                {Object.keys(reverseRequests[index] || {}).map((key, i) => {\n                  if (\n                    tableData[\"requests\"] == null ||\n                    tableData[\"requests\"][key] == null ||\n                    tableData[\"requests\"][key][\"requestedAt\"] == null\n                  ) {\n                    return null;\n                  }\n                  return (\n                    <Fragment key={key}>\n                      <div className=\"container ml-3 mt-3\">\n                        <div className=\"row\">\n                          <div>\n                            {\" \"}\n                            <h5>\n                              {\" \"}\n                              {tableData[\"requests\"][key][\"requestedAt\"]}\n                            </h5>{\" \"}\n                          </div>\n                        </div>\n                        <div className=\"row\">\n                          {\" \"}\n                          <h6>\n                            <strong>\n                              {tableData[\"requests\"][key][\"request\"]} :{\" \"}\n                            </strong>\n                            {tableData[\"requests\"][key][\"status\"]}\n                          </h6>\n                        </div>\n                      </div>\n                    </Fragment>\n                  );\n                })}\n              </Fragment>\n            );\n          })}\n          <button\n            className=\"btn btn-success btn-block\"\n            onClick={() => handlePayment()}\n          >\n            Finish and Pay\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TableBasket;\n"]},"metadata":{},"sourceType":"module"}